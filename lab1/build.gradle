plugins {
    id 'java'
    id 'war'
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'ua.drovolskyi.in'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(22)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.projectlombok:lombok:1.18.26'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation 'org.springframework.boot:spring-boot-starter-web' // run in default embedded Tomcat container
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'

    providedRuntime 'org.apache.tomcat.embed:tomcat-embed-jasper' // to render JSP files
    implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api' // JSTL tags for JSP
    implementation 'org.glassfish.web:jakarta.servlet.jsp.jstl' // https://stackoverflow.com/a/64605853

    implementation 'org.projectlombok:lombok:1.18.34'

    implementation 'org.postgresql:postgresql'

    implementation 'jakarta.validation:jakarta.validation-api'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation 'org.springframework.boot:spring-boot-starter-security'


    /*
    providedRuntime - when dependency needed only during compilation. And we DON'T need to pack it in .WAR file,
     because it will be provide by container

    Guide about Spring and JSP, and its dependencies: https://www.baeldung.com/spring-boot-jsp
    */
}

tasks.named('test') {
    useJUnitPlatform()
}
